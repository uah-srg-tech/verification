// automatically generated by Xtext
grammar es.uah.aut.srg.micobs.svm.lang.svr.SVR with org.eclipse.xtext.common.Terminals

import "http://srg.aut.uah.es/micobs/svm/svr" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://srg.aut.uah.es/micobs/svm/svs" as svs
import "http://srg.aut.uah.es/micobs/svm/tcr" as tcr
import "http://srg.aut.uah.es/micobs/doctpl/doctpl" as doctpl

VSVRDocument returns VSVRDocument:
	'<SVR'
	'name=' name=STRING
	'id=' id=STRING
	'issue=' issue=UINT_STRING
	'revision=' revision=UINT_STRING
	'date=' date=STRING
	'>'
	'<svsParent' 'name=' svsParent=[svs::VSVSDocument|STRING] '/>'
	('<tcrParent' 'name=' tcrParent+=[tcr::VTCRTestCampaignReport|STRING] '/>')*
		(tbcsTbdsSection=VSVRTBCsTBDs)?
		introductionSection=VSVRIntroduction
		applicableDocumentsSection=VSVRApplicableDocuments
		referenceDocumentsSection=VSVRReferenceDocuments
		termsDefinitionsAbbreviationsSection=VSVRTermsDefinitionsAbbreviations
	'</SVR>';

VSVRTBCsTBDs returns VSVRTBCsTBDs:
	{VSVRTBCsTBDs}
	'<TBCsTBDs>'
		(tbcs+=DTBC)*
		(tbds+=DTBD)*
	'</TBCsTBDs>';

DTBC returns doctpl::DTBC:
	'<TBC'
		'name=' name=STRING
		('description=' description=STRING |
		'parentTBC=' parentTBC=[doctpl::DTBC|STRING])
	'/>';

DTBD returns doctpl::DTBD:
	'<TBD'
		'name=' name=STRING
		('description=' description=STRING |
		'parentTBD=' parentTBD=[doctpl::DTBD|STRING])
	'/>';

DBody returns doctpl::DBody:
	'<body>'
		(bodyContent+=DBodyContent)+
	'</body>';

DBodyContent returns doctpl::DBodyContent:
	DParagraph | DItemize | DEnumerate | DFigureFromFile | DTableFromFile | DBasicTable;

enum DAlignment returns doctpl::DAlignment:
	left = '"left"' | center = '"center"' | right = '"right"' | justified = '"justified"';

DParagraph returns doctpl::DParagraph:
	'<paragraph'
		('name=' name=STRING)?
		('alignment=' alignment=DAlignment)?
		('style=' style=STRING)?
		('indent=' indent=REAL_STRING)?
		'>'
		(paragraphContent+=DParagraphContent)+ 
	'</paragraph>';

DListItem returns doctpl::DListItem:
{doctpl::DListItem}
	'<listItem>'
		(paragraph=DParagraph)?
		('<sublist>' sublist=DListContent '</sublist>')?
	'</listItem>';

DListContent returns doctpl::DListContent:
	DItemize | DEnumerate;

DItemize returns doctpl::DItemize:
	'<itemize'
		('name=' name=STRING)?
		('alignment=' alignment=DAlignment)?
		('style=' style=STRING)?
		('indent=' indent=REAL_STRING)?
		'>'
		(items+=DListItem)+ 
	'</itemize>';

DEnumerate returns doctpl::DEnumerate:
	'<enumerate'
		('name=' name=STRING)?
		('alignment=' alignment=DAlignment)?
		('style=' style=STRING)?
		('indent=' indent=REAL_STRING)?
		'>'
		(items+=DListItem)+ 
	'</enumerate>';

DParagraphContent returns doctpl::DParagraphContent:
	DRun | DHyperlink;

enum DRunAttributes returns doctpl::DRunAttributes:
	TRUE = '"true"' | FALSE = '"false"';

DRun returns doctpl::DRun:
	'<run'
		('bold=' bold=DRunAttributes)?
		('italics=' italics=DRunAttributes)?
		('underline=' underline=DRunAttributes)?
		('color=' color=STRING)?
	'>'
		(tab=DTab)?
		text=DText
	'</run>';

DHyperlink returns doctpl::DHyperlink:
	'<hyperlink'
		'reference=' reference=[doctpl::DReferenceableObject|STRING]
	(('>' (run=DRun) '</hyperlink>') | ('/>'));

DTab returns doctpl::DTab:
{doctpl::DTab}
    '<tab/>';
		
DText returns doctpl::DText:
	content=RUNTEXT;

terminal RUNTEXT returns ecore::EString:
    '<text>' -> '</text>';

DFigureFromFile returns doctpl::DFigureFromFile:
	'<figureFromFile'
		'name=' name=STRING
		'referenceFile=' referenceFile=STRING
		'width=' width=UINT_STRING
		'height=' height=UINT_STRING
		('alignment=' alignment=DAlignment)?
		('style=' style=STRING)?
		('indent=' indent=REAL_STRING)?
		('caption=' caption=STRING)?
	'/>';

DTableFromFile returns doctpl::DTableFromFile:
	'<tableFromFile'
		'name=' name=STRING
		'referenceFile=' referenceFile=STRING
		'width=' width=UINT_STRING
		'height=' height=UINT_STRING
		('alignment=' alignment=DAlignment)?
		('style=' style=STRING)?
		('indent=' indent=REAL_STRING)?
		('caption=' caption=STRING)?
	'/>';

DBasicTable returns doctpl::DBasicTable: 
	'<basicTable'
		'name=' name=STRING
		('width=' width=UINT_STRING)?
		('alignment=' alignment=DAlignment)?
		('style=' style=STRING)?
		('indent=' indent=REAL_STRING)?
		('caption=' caption=STRING)?
	'>'
		(rows+=DRow)+
	'</basicTable>';

DRow returns doctpl::DRow:
	'<row>'
		(cells+=DCell)+
	'</row>';

DCell returns doctpl::DCell:
	'<cell'
		('colSpan=' colSpan=UINT_STRING)?
		('rowSpan=' rowSpan=UINT_STRING)?
		('width=' width=UINT_STRING)?
		('shadow=' shadow=STRING)?
	'>'
		(bodyContent+=DBodyContent)+
	'</cell>';

DApplicableDocument returns doctpl::DApplicableDocument:
	'<ApplicableDocument'
		'name=' name=STRING
		'title=' title=STRING
		'id=' id=STRING
		('issue=' issue=UINT_STRING
		('revision=' revision=UINT_STRING)?)?
		('date=' date=STRING)?
		('url=' url=STRING)?
	'/>';

DReferenceDocument returns doctpl::DReferenceDocument:
	'<ReferenceDocument'
		'name=' name=STRING
		'title=' title=STRING
		'id=' id=STRING
		('issue=' issue=UINT_STRING
		('revision=' revision=UINT_STRING)?)?
		('date=' date=STRING)?
		('url=' url=STRING)?
	'/>';

VSVRFixedSection returns VSVRFixedSection:
{VSVRFixedSection}
	(body=DBody)?
	(svrInstatiableSubsections+=VSVRInstantiableSection)*;
	
VSVRInstantiableSection returns VSVRInstantiableSection:
	'<subsection'
		'name=' name=STRING
		'>'
		(body=DBody)?
		(svrInstatiableSubsections+=VSVRInstantiableSection)*
	'</subsection>';

VSVRIntroduction returns VSVRIntroduction:
	'<Introduction>'
		(svrInstatiableSubsections+=VSVRInstantiableSection)+
	'</Introduction>';

VSVRApplicableDocuments returns VSVRApplicableDocuments:
	{VSVRApplicableDocuments}
	'<ApplicableDocuments>'
		(applicableDocuments+=DApplicableDocument)*
	'</ApplicableDocuments>';

VSVRReferenceDocuments returns VSVRReferenceDocuments:
	{VSVRReferenceDocuments}
	'<ReferenceDocuments>'
		(referenceDocuments+=DReferenceDocument)*
	'</ReferenceDocuments>';

VSVRTermsDefinitionsAbbreviations returns VSVRTermsDefinitionsAbbreviations:
	{VSVRTermsDefinitionsAbbreviations}
	'<TermsDefinitionsAbbreviations>'
		(terms+=VSVRTerm)*
		(definitions+=VSVRDefinition)*
		(abbreviations+=VSVRAbbreviation)*
	'</TermsDefinitionsAbbreviations>';

VSVRTerm returns VSVRTerm:
	'<Term'
		'name=' name=STRING '>'
		description=DRun
	'</Term>';

VSVRDefinition returns VSVRDefinition:
	'<Definition'
		'name=' name=STRING '>'
		description=DRun
	'</Definition>';

VSVRAbbreviation returns VSVRAbbreviation:
	'<Abbreviation'
		'name=' name=STRING '>'
		description=DRun
	'</Abbreviation>';

terminal HEXADECIMAL returns ecore::EString:
	('0x' (('0'..'9') | ('a'..'f') | ('A'..'F'))+);

INTEGER returns ecore::EString:
	('-'? INT | HEXADECIMAL);
	
terminal UINT_STRING returns ecore::EString:
	('"' ('0'..'9')+ '"');
	
terminal REAL_STRING returns ecore::EString:
	('"' ('0'..'9')+ ('.' ('0'..'9')+)? '"');

terminal HEX_STRING returns ecore::EString:
	('"0x' (('0'..'9') | ('a'..'f') | ('A'..'F'))+ '"');
