// automatically generated by Xtext
grammar es.uah.aut.srg.micobs.svm.lang.sss.SSS with org.eclipse.xtext.common.Terminals

import "http://srg.aut.uah.es/micobs/svm/sss" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://srg.aut.uah.es/micobs/svm/tdm" as tdm
import "http://srg.aut.uah.es/micobs/doctpl/doc" as doc

VSSSDocument returns VSSSDocument:
	'VSSSDocument'
	name=EString
	'{'
		'id' id=EString
		'issue' issue=EString
		'revision' revision=EString
		'date' date=EString
		('parents' '(' parents+=[tdm::VTraceableDocument|EString] ( "," parents+=[tdm::VTraceableDocument|EString])* ')' )?
		'introductionSection' introductionSection=VSSSIntroduction
		'applicableDocumentsSection' applicableDocumentsSection=VSSSApplicableDocuments
		'referenceDocumentsSection' referenceDocumentsSection=VSSSReferenceDocuments
		'termsDefinitionsAbbreviationsSection' termsDefinitionsAbbreviationsSection=VSSSTermsDefinitionsAbbreviations
		'generalDescriptionSection' generalDescriptionSection=VSSSGeneralDescription
		'specificRequirementsSection' specificRequirementsSection=VSSSSpecificRequirements
		'verificationValidationIntegrationSection' verificationValidationIntegrationSection=VSSSVerificationValidationIntegrationRequirements
		('systemModelsSection' systemModelsSection=VSSSSystemModels)?
	'}';

DBody returns doc::DBody:
	DBody_Impl | DCell;

DBodyContent returns doc::DBodyContent:
	DParagraph | DItemize | DEnumerate;

DParagraphContent returns doc::DParagraphContent:
	DRun | DHyperlink;

DReferenceableObject returns doc::DReferenceableObject:
	DReferenceableObject_Impl | DApplicableDocument | DReferenceDocument;

DListContent returns doc::DListContent:
	DItemize | DEnumerate;

EString returns ecore::EString:
	STRING | ID;

VSSSIntroduction returns VSSSIntroduction:
	'VSSSIntroduction'
	'{'
		'purpose' purpose=DBody
		'objetive' objetive=DBody
		'content' content=DBody
		'reason' reason=DBody
	'}';

VSSSApplicableDocuments returns VSSSApplicableDocuments:
	{VSSSApplicableDocuments}
	'VSSSApplicableDocuments'
	'{'
		('applicableDocuments' '{' applicableDocuments+=DApplicableDocument ( "," applicableDocuments+=DApplicableDocument)* '}' )?
	'}';

VSSSReferenceDocuments returns VSSSReferenceDocuments:
	{VSSSReferenceDocuments}
	'VSSSReferenceDocuments'
	'{'
		('referenceDocuments' '{' referenceDocuments+=DReferenceDocument ( "," referenceDocuments+=DReferenceDocument)* '}' )?
	'}';

VSSSTermsDefinitionsAbbreviations returns VSSSTermsDefinitionsAbbreviations:
	{VSSSTermsDefinitionsAbbreviations}
	'VSSSTermsDefinitionsAbbreviations'
	'{'
		('terms' '{' terms+=VSSSTerm ( "," terms+=VSSSTerm)* '}' )?
		('definitions' '{' definitions+=VSSSDefinition ( "," definitions+=VSSSDefinition)* '}' )?
		('abbreviations' '{' abbreviations+=VSSSAbbreviation ( "," abbreviations+=VSSSAbbreviation)* '}' )?
	'}';

VSSSGeneralDescription returns VSSSGeneralDescription:
	'VSSSGeneralDescription'
	'{'
		'productPerspective' productPerspective=VSSSGeneralDescriptionSubsection
		'generalCapabilites' generalCapabilites=VSSSGeneralDescriptionSubsection
		'generalConstraints' generalConstraints=VSSSGeneralDescriptionSubsection
		'operationalEnvironment' operationalEnvironment=VSSSGeneralDescriptionSubsection
		'assumptionsDependencies' assumptionsDependencies=VSSSGeneralDescriptionSubsection
	'}';

VSSSSpecificRequirements returns VSSSSpecificRequirements:
	{VSSSSpecificRequirements}
	'VSSSSpecificRequirements'
	'{'
		('general' '{' general+=VSSSGeneralRequirement ( "," general+=VSSSGeneralRequirement)* '}' )?
		('capabilities' '{' capabilities+=VSSSCapabilitiesRequirement ( "," capabilities+=VSSSCapabilitiesRequirement)* '}' )?
		('systemInterface' '{' systemInterface+=VSSSSystemInterfaceRequirement ( "," systemInterface+=VSSSSystemInterfaceRequirement)* '}' )?
		('adaptationMissionization' '{' adaptationMissionization+=VSSSAdaptationMissionizationRequirement ( "," adaptationMissionization+=VSSSAdaptationMissionizationRequirement)* '}' )?
		('computerResource' '{' computerResource+=VSSSComputerResourceRequirement ( "," computerResource+=VSSSComputerResourceRequirement)* '}' )?
		('security' '{' security+=VSSSSecurityRequirement ( "," security+=VSSSSecurityRequirement)* '}' )?
		('safety' '{' safety+=VSSSSafetyRequirement ( "," safety+=VSSSSafetyRequirement)* '}' )?
		('reliabiltyAvailability' '{' reliabiltyAvailability+=VSSSReliabiltyAvailabilityRequirement ( "," reliabiltyAvailability+=VSSSReliabiltyAvailabilityRequirement)* '}' )?
		('quality' '{' quality+=VSSSQualityRequirement ( "," quality+=VSSSQualityRequirement)* '}' )?
		('design' '{' design+=VSSSDesignRequirement ( "," design+=VSSSDesignRequirement)* '}' )?
		('softwareOperations' '{' softwareOperations+=VSSSSoftwareOperationsRequirement ( "," softwareOperations+=VSSSSoftwareOperationsRequirement)* '}' )?
		('softwareMaintenance' '{' softwareMaintenance+=VSSSSoftwareMaintenanceRequirement ( "," softwareMaintenance+=VSSSSoftwareMaintenanceRequirement)* '}' )?
		('systemSoftwareObservability' '{' systemSoftwareObservability+=VSSSSystemSoftwareObservabilityRequirement ( "," systemSoftwareObservability+=VSSSSystemSoftwareObservabilityRequirement)* '}' )?
	'}';

VSSSVerificationValidationIntegrationRequirements returns VSSSVerificationValidationIntegrationRequirements:
	{VSSSVerificationValidationIntegrationRequirements}
	'VSSSVerificationValidationIntegrationRequirements'
	'{'
		('verificationValidationProcess' '{' verificationValidationProcess+=VSSSVerificationValidationProcessRequirement ( "," verificationValidationProcess+=VSSSVerificationValidationProcessRequirement)* '}' )?
		('validationApproach' '{' validationApproach+=VSSSValidationApproach ( "," validationApproach+=VSSSValidationApproach)* '}' )?
		('validation' '{' validation+=VSSSValidationRequirement ( "," validation+=VSSSValidationRequirement)* '}' )?
		('verification' '{' verification+=VSSSVerificationRequirement ( "," verification+=VSSSVerificationRequirement)* '}' )?
	'}';

VSSSSystemModels returns VSSSSystemModels:
	'VSSSSystemModels'
	'{'
		'systemModels' '{' systemModels+=VSSSSystemModel ( "," systemModels+=VSSSSystemModel)* '}' 
	'}';

DBody_Impl returns doc::DBody:
	'DBody'
	'{'
		'bodyContent' '{' bodyContent+=DBodyContent ( "," bodyContent+=DBodyContent)* '}' 
	'}';

DCell returns doc::DCell:
	'DCell'
	'{'
		'bodyContent' '{' bodyContent+=DBodyContent ( "," bodyContent+=DBodyContent)* '}' 
	'}';

DParagraph returns doc::DParagraph:
	'DParagraph'
	'{'
		'paragraphContent' '{' paragraphContent+=DParagraphContent ( "," paragraphContent+=DParagraphContent)* '}' 
	'}';

DItemize returns doc::DItemize:
	'DItemize'
	'{'
		'items' '{' items+=DListItem ( "," items+=DListItem)* '}' 
	'}';

DEnumerate returns doc::DEnumerate:
	'DEnumerate'
	'{'
		'items' '{' items+=DListItem ( "," items+=DListItem)* '}' 
	'}';

DRow returns doc::DRow:
	'DRow'
	'{'
		'span' span=EString
		'columns' '{' columns+=DColumn ( "," columns+=DColumn)* '}' 
	'}';

DColumn returns doc::DColumn:
	'DColumn'
	'{'
		'span' span=EString
		'cells' '{' cells+=DCell ( "," cells+=DCell)* '}' 
	'}';

DRun returns doc::DRun:
	'DRun'
	'{'
		'bold' bold=DRunFormatEnableDisable
		'italic' italic=DRunFormatEnableDisable
		'underscore' underscore=DRunFormatEnableDisable
		'text' text=DText
	'}';

DHyperlink returns doc::DHyperlink:
	'DHyperlink'
	'{'
		'reference' reference=[doc::DReferenceableObject|EString]
		'run' run=DRun
	'}';

DText returns doc::DText:
	'DText'
	'{'
		'content' content=EString
	'}';

enum DRunFormatEnableDisable returns doc::DRunFormatEnableDisable:
				disabled = 'disabled' | enabled = 'enabled';

DReferenceableObject_Impl returns doc::DReferenceableObject:
	{doc::DReferenceableObject}
	'DReferenceableObject'
	;

DApplicableDocument returns doc::DApplicableDocument:
	'DApplicableDocument'
	'{'
		'title' title=EString
		'issue' issue=EString
		'revision' revision=EString
	'}';

DReferenceDocument returns doc::DReferenceDocument:
	'DReferenceDocument'
	'{'
		'title' title=EString
		'issue' issue=EString
		'revision' revision=EString
	'}';

DListItem returns doc::DListItem:
	'DListItem'
	'{'
		'paragraph' '{' paragraph+=DParagraph ( "," paragraph+=DParagraph)* '}' 
		('sublist' sublist=DListContent)?
	'}';

VSSSTerm returns VSSSTerm:
	'VSSSTerm'
	name=EString
	'{'
		'description' description=[doc::DParagraph|EString]
	'}';

VSSSDefinition returns VSSSDefinition:
	'VSSSDefinition'
	name=EString
	'{'
		'description' description=[doc::DParagraph|EString]
	'}';

VSSSAbbreviation returns VSSSAbbreviation:
	'VSSSAbbreviation'
	name=EString
	'{'
		'description' description=[doc::DParagraph|EString]
	'}';

VSSSGeneralDescriptionSubsection returns VSSSGeneralDescriptionSubsection:
	'VSSSGeneralDescriptionSubsection'
	'{'
		'body' body=[doc::DBody|EString]
	'}';

VSSSGeneralRequirement returns VSSSGeneralRequirement:
	'VSSSGeneralRequirement'
	'{'
		'sssItems' '{' sssItems+=VSSSDocumentItem ( "," sssItems+=VSSSDocumentItem)* '}' 
	'}';

VSSSCapabilitiesRequirement returns VSSSCapabilitiesRequirement:
	'VSSSCapabilitiesRequirement'
	'{'
		'sssItems' '{' sssItems+=VSSSDocumentItem ( "," sssItems+=VSSSDocumentItem)* '}' 
	'}';

VSSSSystemInterfaceRequirement returns VSSSSystemInterfaceRequirement:
	'VSSSSystemInterfaceRequirement'
	'{'
		'sssItems' '{' sssItems+=VSSSDocumentItem ( "," sssItems+=VSSSDocumentItem)* '}' 
	'}';

VSSSAdaptationMissionizationRequirement returns VSSSAdaptationMissionizationRequirement:
	'VSSSAdaptationMissionizationRequirement'
	'{'
		'sssItems' '{' sssItems+=VSSSDocumentItem ( "," sssItems+=VSSSDocumentItem)* '}' 
	'}';

VSSSComputerResourceRequirement returns VSSSComputerResourceRequirement:
	'VSSSComputerResourceRequirement'
	'{'
		'sssItems' '{' sssItems+=VSSSDocumentItem ( "," sssItems+=VSSSDocumentItem)* '}' 
	'}';

VSSSSecurityRequirement returns VSSSSecurityRequirement:
	'VSSSSecurityRequirement'
	'{'
		'sssItems' '{' sssItems+=VSSSDocumentItem ( "," sssItems+=VSSSDocumentItem)* '}' 
	'}';

VSSSSafetyRequirement returns VSSSSafetyRequirement:
	'VSSSSafetyRequirement'
	'{'
		'sssItems' '{' sssItems+=VSSSDocumentItem ( "," sssItems+=VSSSDocumentItem)* '}' 
	'}';

VSSSReliabiltyAvailabilityRequirement returns VSSSReliabiltyAvailabilityRequirement:
	'VSSSReliabiltyAvailabilityRequirement'
	'{'
		'sssItems' '{' sssItems+=VSSSDocumentItem ( "," sssItems+=VSSSDocumentItem)* '}' 
	'}';

VSSSQualityRequirement returns VSSSQualityRequirement:
	'VSSSQualityRequirement'
	'{'
		'sssItems' '{' sssItems+=VSSSDocumentItem ( "," sssItems+=VSSSDocumentItem)* '}' 
	'}';

VSSSDesignRequirement returns VSSSDesignRequirement:
	'VSSSDesignRequirement'
	'{'
		'sssItems' '{' sssItems+=VSSSDocumentItem ( "," sssItems+=VSSSDocumentItem)* '}' 
	'}';

VSSSSoftwareOperationsRequirement returns VSSSSoftwareOperationsRequirement:
	'VSSSSoftwareOperationsRequirement'
	'{'
		'sssItems' '{' sssItems+=VSSSDocumentItem ( "," sssItems+=VSSSDocumentItem)* '}' 
	'}';

VSSSSoftwareMaintenanceRequirement returns VSSSSoftwareMaintenanceRequirement:
	'VSSSSoftwareMaintenanceRequirement'
	'{'
		'sssItems' '{' sssItems+=VSSSDocumentItem ( "," sssItems+=VSSSDocumentItem)* '}' 
	'}';

VSSSSystemSoftwareObservabilityRequirement returns VSSSSystemSoftwareObservabilityRequirement:
	'VSSSSystemSoftwareObservabilityRequirement'
	'{'
		'sssItems' '{' sssItems+=VSSSDocumentItem ( "," sssItems+=VSSSDocumentItem)* '}' 
	'}';

VSSSDocumentItem returns VSSSDocumentItem:
	'VSSSDocumentItem'
	'{'
		'id' id=EString
		'verificationMethod' verificationMethod=VVerificationMethod
		'body' body=[doc::DBody|EString]
	'}';

enum VVerificationMethod returns tdm::VVerificationMethod:
				Analysis = 'Analysis' | Inspection = 'Inspection' | Testing = 'Testing' | Review = 'Review' | ModelSimulation = 'ModelSimulation' | WalkThrough = 'WalkThrough' | CrossReading = 'CrossReading' | DeskChecking = 'DeskChecking';

VSSSVerificationValidationProcessRequirement returns VSSSVerificationValidationProcessRequirement:
	'VSSSVerificationValidationProcessRequirement'
	'{'
		'sssItems' '{' sssItems+=VSSSDocumentItem ( "," sssItems+=VSSSDocumentItem)* '}' 
	'}';

VSSSValidationApproach returns VSSSValidationApproach:
	'VSSSValidationApproach'
	'{'
		'sssItems' '{' sssItems+=VSSSDocumentItem ( "," sssItems+=VSSSDocumentItem)* '}' 
	'}';

VSSSValidationRequirement returns VSSSValidationRequirement:
	'VSSSValidationRequirement'
	'{'
		'sssItems' '{' sssItems+=VSSSDocumentItem ( "," sssItems+=VSSSDocumentItem)* '}' 
	'}';

VSSSVerificationRequirement returns VSSSVerificationRequirement:
	'VSSSVerificationRequirement'
	'{'
		'sssItems' '{' sssItems+=VSSSDocumentItem ( "," sssItems+=VSSSDocumentItem)* '}' 
	'}';

VSSSSystemModel returns VSSSSystemModel:
	{VSSSSystemModel}
	'VSSSSystemModel'
	;

QualifiedName returns ecore::EString:
	ID ('.' ID)*;

Version returns ecore::EString:
	(INT | ((INT)? ID)) ('.' (INT | ((INT)? ID)))*
	;

VersionedQualifiedName returns ecore::EString:
	QualifiedName '(' Version ')'
	;

VersionedQualifiedReferenceName returns ecore::EString:
	(VersionedQualifiedName '::')? ID ('::' ID)*;

terminal HEXADECIMAL returns ecore::EString:
	('0x' (('0'..'9') | ('a'..'f') | ('A'..'F'))+);

INTEGER returns ecore::EString:
	('-'? INT | HEXADECIMAL);

EBoolean returns ecore::EBoolean:
	'true' | 'false';
	
REAL returns ecore::EString:
	'-'? (INT '.' ':=' INT) ('e' ('-')? INT)?;