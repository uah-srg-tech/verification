// automatically generated by Xtext
grammar es.uah.aut.srg.micobs.svm.lang.sss.SSS with org.eclipse.xtext.common.Terminals

import "http://srg.aut.uah.es/micobs/svm/sss" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://srg.aut.uah.es/micobs/svm/tdm" as tdm
import "http://srg.aut.uah.es/micobs/doctpl/doc" as doc

VSSSDocument returns VSSSDocument:
	'<SSS'
		'name=' name=STRING
		'id=' id=STRING
		'issue=' issue=STRING
		'revision=' revision=STRING
		'date=' date=STRING
		'>'
		introductionSection=VSSSIntroduction
		applicableDocumentsSection=VSSSApplicableDocuments
		referenceDocumentsSection=VSSSReferenceDocuments
		termsDefinitionsAbbreviationsSection=VSSSTermsDefinitionsAbbreviations
		generalDescriptionSection=VSSSGeneralDescription
		specificRequirementsSection=VSSSSpecificRequirements
		verificationValidationIntegrationSection=VSSSVerificationValidationIntegrationRequirements
		systemModelsSection=VSSSSystemModels
	'</SSS>';

DBody returns doc::DBody:
	'<body>'
		(bodyContent+=DBodyContent)+
	'</body>';

DBodyContent returns doc::DBodyContent:
	DParagraph | DItemize | DEnumerate | DFigureFromFile | DTableFromFile | DBasicTable;

DParagraph returns doc::DParagraph:
	'<paragraph>'
		(paragraphContent+=DParagraphContent)+ 
	'</paragraph>';

DListItem returns doc::DListItem:
	'<listItem>'
		(paragraph+=DParagraph)+ 
		('<sublist>' sublist=DListContent '</sublist>')?
	'</listItem>';

DListContent returns doc::DListContent:
	DItemize | DEnumerate;

DItemize returns doc::DItemize:
	'<itemize>'
		(items+=DListItem)+ 
	'</itemize>';

DEnumerate returns doc::DEnumerate:
	'<enumerate>'
		(items+=DListItem)+ 
	'</enumerate>';

DParagraphContent returns doc::DParagraphContent:
	DRun | DHyperlink;

DRun returns doc::DRun:
	'<run'
		('bold="true"')?
		('italics="true"')?
		('underline="true"')?
	'>'
		text=DText
	'</run>';

DHyperlink returns doc::DHyperlink:
	'<hyperlink'
		'reference=' reference=[doc::DReferenceableObject|STRING]
	'>'
		(run=DRun)?
	'</hyperlink>';
	
DText returns doc::DText:
	content=RUNTEXT;

terminal RUNTEXT returns ecore::EString:
    '<text>' -> '</text>';

DFigureFromFile returns doc::DFigureFromFile:
	'<figureFromFile'
		'name=' name=STRING
		'referenceFile=' referenceFile=STRING
		('caption=' caption=STRING)?
	'/>';

DTableFromFile returns doc::DTableFromFile:
	'<tableFromFile'
		'name=' name=STRING
		'referenceFile=' referenceFile=STRING
		('caption=' caption=STRING)?
	'/>';

DBasicTable returns doc::DBasicTable: 
	'<basicTable'
		'name=' name=STRING
		('caption=' caption=STRING)?
	'>'
		(rows+=DRow)+
	'</basicTable>';

DRow returns doc::DRow:
	'<row'
		'span=' span=STRING
	'>'
		(columns+=DColumn)+ 
	'</row>';

DColumn returns doc::DColumn:
	'<column'
		'span=' span=STRING
	'>'
		(cells+=DCell)+
	'</column>';

DCell returns doc::DCell:
	'<cell>'
		(bodyContent+=DBodyContent)+
	'</cell>';

DApplicableDocument returns doc::DApplicableDocument:
	'<ApplicableDocument'
		'name=' name=STRING
		'title=' title=STRING
		'id=' id=STRING
		('issue=' issue=STRING
		'revision=' revision=STRING)?
		('date=' date=STRING)?
	'/>';

DReferenceDocument returns doc::DReferenceDocument:
	'<ReferenceDocument'
		'name=' name=STRING
		'title=' title=STRING
		'id=' id=STRING
		('issue=' issue=STRING
		'revision=' revision=STRING)?
		('date=' date=STRING)?
	'/>';

VSSSFixedSection returns VSSSFixedSection:
{VSSSFixedSection}
	(body=DBody)?
	(sssInstatiableSubsections+=VSSSInstatiableSection)*;

VSSSInstatiableSection returns VSSSInstantiableSection:
	'<subsection'
		'name=' name=STRING
		'>'
		(body=DBody)?
		(sssInstatiableSubsections+=VSSSInstatiableSection)*
	'</subsection>';

VSSSIntroduction returns VSSSIntroduction:
	'<Introduction>'
		(sssInstatiableSubsections+=VSSSInstatiableSection)+
	'</Introduction>';

VSSSApplicableDocuments returns VSSSApplicableDocuments:
	{VSSSApplicableDocuments}
	'<ApplicableDocuments>'
		(applicableDocuments+=DApplicableDocument)*
	'</ApplicableDocuments>';

VSSSReferenceDocuments returns VSSSReferenceDocuments:
	{VSSSReferenceDocuments}
	'<ReferenceDocuments>'
		(referenceDocuments+=DReferenceDocument)*
	'</ReferenceDocuments>';

VSSSTermsDefinitionsAbbreviations returns VSSSTermsDefinitionsAbbreviations:
	{VSSSTermsDefinitionsAbbreviations}
	'<TermsDefinitionsAbbreviations>'
		(terms+=VSSSTerm)*
		(definitions+=VSSSDefinition)*
		(abbreviations+=VSSSAbbreviation)*
	'</TermsDefinitionsAbbreviations>';

VSSSGeneralDescription returns VSSSGeneralDescription:
	'<GeneralDescription>'
		'<ProductPerspective>' productPerspective=VSSSFixedSection '</ProductPerspective>'
		'<GeneralCapabilities>' generalCapabilities=VSSSFixedSection '</GeneralCapabilities>'
		'<GeneralConstraints>' generalConstraints=VSSSFixedSection '</GeneralConstraints>'
		'<OperationalEnvironment>' operationalEnvironment=VSSSFixedSection '</OperationalEnvironment>'
		'<AssumptionsDependencies>' assumptionsDependencies=VSSSFixedSection '</AssumptionsDependencies>'
	'</GeneralDescription>';

VSSSSpecificRequirements returns VSSSSpecificRequirements:
	'<SpecificRequirements>'
		(sectionDescription=DBody)?
		general=VSSSGeneralRequirements
		capabilities=VSSSCapabilitiesRequirements
		systemInterface=VSSSSystemInterfaceRequirements
		adaptationMissionization=VSSSAdaptationMissionizationRequirements
		computerResource=VSSSComputerResourceRequirements
		security=VSSSSecurityRequirements
		safety=VSSSSafetyRequirements
		reliabiltyAvailability=VSSSReliabiltyAvailabilityRequirements
		quality=VSSSQualityRequirements
		design=VSSSDesignRequirements
		softwareOperations=VSSSSoftwareOperationsRequirements
		softwareMaintenance=VSSSSoftwareMaintenanceRequirements
		systemSoftwareObservability=VSSSSystemSoftwareObservabilityRequirements
	'</SpecificRequirements>';

VSSSVerificationValidationIntegrationRequirements returns VSSSVerificationValidationIntegrationRequirements:
	'<VerificationValidationIntegrationRequirements>'
		(sectionDescription=DBody)?
		verificationValidationProcess=VSSSVerificationValidationProcessRequirements
		validationApproach=VSSSValidationApproach
		validation=VSSSValidationRequirements
		verification=VSSSVerificationRequirements
	'</VerificationValidationIntegrationRequirements>';

VSSSSystemModels returns VSSSSystemModels:
	{VSSSSystemModels}
	'<SystemModels>'
		(systemModels+=VSSSSystemModel)*
	'</SystemModels>';

VSSSTerm returns VSSSTerm:
	'<Term'
		'name=' name=STRING '>'
		description=DRun
	'</Term>';

VSSSDefinition returns VSSSDefinition:
	'<Definition'
		'name=' name=STRING '>'
		description=DRun
	'</Definition>';

VSSSAbbreviation returns VSSSAbbreviation:
	'<Abbreviation'
		'name=' name=STRING '>'
		description=DRun
	'</Abbreviation>';

VSSSInstantiableRequirementSection returns VSSSInstantiableRequirementSection:
	'<subsection'
		'name=' name=STRING
		'>'
		(sectionDescription=DBody)?
		(sssItems+=VSSSDocumentItem)*
	'</subsection>';

VSSSGeneralRequirements returns VSSSGeneralRequirements:
	{VSSSGeneralRequirements}
	'<GeneralRequirements>'
		(sectionDescription=DBody)?
		(sssItems+=VSSSDocumentItem)*
		(sssRequirementSubsections+=VSSSInstantiableRequirementSection)*
	'</GeneralRequirements>';
	
VSSSCapabilitiesRequirements returns VSSSCapabilitiesRequirements:
	{VSSSCapabilitiesRequirements}
	'<CapabilitiesRequirements>'
		(sectionDescription=DBody)?
		(sssItems+=VSSSDocumentItem)*
		(sssRequirementSubsections+=VSSSInstantiableRequirementSection)*
	'</CapabilitiesRequirements>';

VSSSSystemInterfaceRequirements returns VSSSSystemInterfaceRequirements:
	{VSSSSystemInterfaceRequirements}
	'<SystemInterfaceRequirements>'
		(sectionDescription=DBody)?
		(sssItems+=VSSSDocumentItem)*
		(sssRequirementSubsections+=VSSSInstantiableRequirementSection)*
	'</SystemInterfaceRequirements>';

VSSSAdaptationMissionizationRequirements returns VSSSAdaptationMissionizationRequirements:
	{VSSSAdaptationMissionizationRequirements}
	'<VSSSAdaptationMissionizationRequirements>'
		(sectionDescription=DBody)?
		(sssItems+=VSSSDocumentItem)*
		(sssRequirementSubsections+=VSSSInstantiableRequirementSection)*
	'</VSSSAdaptationMissionizationRequirements>';

VSSSComputerResourceRequirements returns VSSSComputerResourceRequirements:
	{VSSSComputerResourceRequirements}
	'<ComputerResourceRequirements>'
		(sectionDescription=DBody)?
		(sssItems+=VSSSDocumentItem)*
		(sssRequirementSubsections+=VSSSInstantiableRequirementSection)*
	'</ComputerResourceRequirements>';

VSSSSecurityRequirements returns VSSSSecurityRequirements:
	{VSSSSecurityRequirements}
	'<SecurityRequirements>'
		(sectionDescription=DBody)?
		(sssItems+=VSSSDocumentItem)*
		(sssRequirementSubsections+=VSSSInstantiableRequirementSection)*
	'</SecurityRequirements>';

VSSSSafetyRequirements returns VSSSSafetyRequirements:
	{VSSSSafetyRequirements}
	'<SafetyRequirements>'
		(sectionDescription=DBody)?
		(sssItems+=VSSSDocumentItem)*
		(sssRequirementSubsections+=VSSSInstantiableRequirementSection)*
	'</SafetyRequirements>';

VSSSReliabiltyAvailabilityRequirements returns VSSSReliabiltyAvailabilityRequirements:
	{VSSSReliabiltyAvailabilityRequirements}
	'<ReliabiltyAvailabilityRequirements>'
		(sssItems+=VSSSDocumentItem)*
		(sectionDescription=DBody)?
		(sssRequirementSubsections+=VSSSInstantiableRequirementSection)*
	'</ReliabiltyAvailabilityRequirements>';

VSSSQualityRequirements returns VSSSQualityRequirements:
	{VSSSQualityRequirements}
	'<QualityRequirements>'
		(sectionDescription=DBody)?
		(sssItems+=VSSSDocumentItem)*
		(sssRequirementSubsections+=VSSSInstantiableRequirementSection)*
	'</QualityRequirements>';

VSSSDesignRequirements returns VSSSDesignRequirements:
	{VSSSDesignRequirements}
	'<DesignRequirements>'
		(sectionDescription=DBody)?
		(sssItems+=VSSSDocumentItem)*
		(sssRequirementSubsections+=VSSSInstantiableRequirementSection)*
	'</DesignRequirements>';

VSSSSoftwareOperationsRequirements returns VSSSSoftwareOperationsRequirements:
	{VSSSSoftwareOperationsRequirements}
	'<SoftwareOperationsRequirements>'
		(sectionDescription=DBody)?
		(sssItems+=VSSSDocumentItem)*
		(sssRequirementSubsections+=VSSSInstantiableRequirementSection)*
	'</SoftwareOperationsRequirements>';

VSSSSoftwareMaintenanceRequirements returns VSSSSoftwareMaintenanceRequirements:
	{VSSSSoftwareMaintenanceRequirements}
	'<SoftwareMaintenanceRequirements>'
		(sectionDescription=DBody)?
		(sssItems+=VSSSDocumentItem)*
		(sssRequirementSubsections+=VSSSInstantiableRequirementSection)*
	'</SoftwareMaintenanceRequirements>';

VSSSSystemSoftwareObservabilityRequirements returns VSSSSystemSoftwareObservabilityRequirements:
	{VSSSSystemSoftwareObservabilityRequirements}
	'<SystemSoftwareObservabilityRequirements>'
		(sectionDescription=DBody)?
		(sssItems+=VSSSDocumentItem)*
		(sssRequirementSubsections+=VSSSInstantiableRequirementSection)*
	'</SystemSoftwareObservabilityRequirements>';

VSSSDocumentItem returns VSSSDocumentItem:
	'<Item'
		'name=' name=STRING
		'validationMethod=' validationMethod=VValidationMethod
		'>'
			'<description>'
				description=DBody
			'</description>'
			(extendedDescription=DBody)?
	'</Item>';
    
enum VValidationMethod returns tdm::VValidationMethod:
	Analysis = '"Analysis"' | Inspection = '"Inspection"' | Testing = '"Testing"' |
	Review = '"Review"' | ModelSimulation = '"ModelSimulation"' | WalkThrough = '"WalkThrough"' |
	CrossReading = '"CrossReading"' | DeskChecking = '"DeskChecking"';

VSSSVerificationValidationProcessRequirements returns VSSSVerificationValidationProcessRequirements:
	{VSSSVerificationValidationProcessRequirements}	
	'<VerificationValidationProcessRequirements>'
		(sssItems+=VSSSDocumentItem)*
		(sssRequirementSubsections+=VSSSInstantiableRequirementSection)*
	'</VerificationValidationProcessRequirements>';

VSSSValidationApproach returns VSSSValidationApproach:
	{VSSSValidationApproach}
	'<ValidationApproach>'
		(sssItems+=VSSSDocumentItem)*
		(sssRequirementSubsections+=VSSSInstantiableRequirementSection)*
	'</ValidationApproach>';

VSSSValidationRequirements returns VSSSValidationRequirements:
	{VSSSValidationRequirements}
	'<ValidationRequirements>'
		(sssItems+=VSSSDocumentItem)*
		(sssRequirementSubsections+=VSSSInstantiableRequirementSection)*
	'</ValidationRequirements>';

VSSSVerificationRequirements returns VSSSVerificationRequirements:
	{VSSSVerificationRequirements}
	'<VerificationRequirements>'
		(sssItems+=VSSSDocumentItem)*
		(sssRequirementSubsections+=VSSSInstantiableRequirementSection)*
	'</VerificationRequirements>';

VSSSSystemModel returns VSSSSystemModel:
	{VSSSSystemModel}
	'<SystemModel/>';