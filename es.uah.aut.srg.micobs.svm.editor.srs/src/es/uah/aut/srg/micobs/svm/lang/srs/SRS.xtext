// automatically generated by Xtext
grammar es.uah.aut.srg.micobs.svm.lang.srs.SRS with org.eclipse.xtext.common.Terminals

import "http://srg.aut.uah.es/micobs/svm/srs" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://srg.aut.uah.es/micobs/svm/tdm" as tdm
import "http://srg.aut.uah.es/micobs/doctpl/doc" as doc

VSRSDocument returns VSRSDocument:
	'<SRS'
		'name=' name=STRING
		'id=' id=STRING
		'issue=' issue=STRING
		'revision=' revision=STRING
		'date=' date=STRING
		'>'
		('<parent' 'name=' parents+=[tdm::VTraceableDocument|STRING] '/>')*
		introductionSection=VSRSIntroduction
		applicableDocumentsSection=VSRSApplicableDocuments
		referenceDocumentsSection=VSRSReferenceDocuments
		termsDefinitionsAbbreviationsSection=VSRSTermsDefinitionsAbbreviations
		softwareOverviewSection=VSRSSoftwareOverview
		requirementsSection=VSRSRequirements
		logicalModelsSection=VSRSLogicalModels
	'</SRS>';

DBody returns doc::DBody:
	'<body>'
		(bodyContent+=DBodyContent)+
	'</body>';

DBodyContent returns doc::DBodyContent:
	DParagraph | DItemize | DEnumerate | DFigureFromFile | DTableFromFile | DBasicTable;

DParagraph returns doc::DParagraph:
	'<paragraph>'
		(paragraphContent+=DParagraphContent)+ 
	'</paragraph>';

DListItem returns doc::DListItem:
	'<listItem>'
		(paragraph+=DParagraph)+ 
		('<sublist>' sublist=DListContent '</sublist>')?
	'</listItem>';

DListContent returns doc::DListContent:
	DItemize | DEnumerate;

DItemize returns doc::DItemize:
	'<itemize>'
		(items+=DListItem)+ 
	'</itemize>';

DEnumerate returns doc::DEnumerate:
	'<enumerate>'
		(items+=DListItem)+ 
	'</enumerate>';

DParagraphContent returns doc::DParagraphContent:
	DRun | DHyperlink;

DRun returns doc::DRun:
	'<run'
		('bold="true"')?
		('italics="true"')?
		('underline="true"')?
	'>'
		text=DText
	'</run>';

DHyperlink returns doc::DHyperlink:
	'<hyperlink'
		'reference=' reference=[doc::DReferenceableObject|STRING]
	'>'
		(run=DRun)?
	'</hyperlink>';
	
DText returns doc::DText:
	content=RUNTEXT;

terminal RUNTEXT returns ecore::EString:
    '<text>' -> '</text>';

DFigureFromFile returns doc::DFigureFromFile:
	'<figureFromFile'
		'name=' name=STRING
		'referenceFile=' referenceFile=STRING
		('caption=' caption=STRING)?
	'/>';

DTableFromFile returns doc::DTableFromFile:
	'<tableFromFile'
		'name=' name=STRING
		'referenceFile=' referenceFile=STRING
		('caption=' caption=STRING)?
	'/>';

DBasicTable returns doc::DBasicTable: 
	'<basicTable'
		'name=' name=STRING
		('caption=' caption=STRING)?
	'>'
		(rows+=DRow)+
	'</basicTable>';

DRow returns doc::DRow:
	'<row'
		'span=' span=STRING
	'>'
		(columns+=DColumn)+ 
	'</row>';

DColumn returns doc::DColumn:
	'<column'
		'span=' span=STRING
	'>'
		(cells+=DCell)+
	'</column>';

DCell returns doc::DCell:
	'<cell>'
		(bodyContent+=DBodyContent)+
	'</cell>';

DApplicableDocument returns doc::DApplicableDocument:
	'<ApplicableDocument'
		'name=' name=STRING
		'title=' title=STRING
		'id=' id=STRING
		('issue=' issue=STRING
		'revision=' revision=STRING)?
		('date=' date=STRING)?
	'/>';

DReferenceDocument returns doc::DReferenceDocument:
	'<ReferenceDocument'
		'name=' name=STRING
		'title=' title=STRING
		'id=' id=STRING
		('issue=' issue=STRING
		'revision=' revision=STRING)?
		('date=' date=STRING)?
	'/>';

VSRSFixedSection returns VSRSFixedSection:
{VSRSFixedSection}
	(body=DBody)?
	(srsInstatiableSubsections+=VSRSInstantiableSection)*;

VSRSInstantiableSection returns VSRSInstantiableSection:
	'<subsection'
		'name=' name=STRING
		'>'
		(body=DBody)?
		(srsInstatiableSubsections+=VSRSInstantiableSection)*
	'</subsection>';
	
VSRSIntroduction returns VSRSIntroduction:
	'<Introduction>'
		(srsInstatiableSubsections+=VSRSInstantiableSection)+
	'</Introduction>';

VSRSApplicableDocuments returns VSRSApplicableDocuments:
	{VSRSApplicableDocuments}
	'<ApplicableDocuments>'
		(applicableDocuments+=DApplicableDocument)*
	'</ApplicableDocuments>';

VSRSReferenceDocuments returns VSRSReferenceDocuments:
	{VSRSReferenceDocuments}
	'<ReferenceDocuments>'
		(referenceDocuments+=DReferenceDocument)*
	'</ReferenceDocuments>';

VSRSTermsDefinitionsAbbreviations returns VSRSTermsDefinitionsAbbreviations:
	{VSRSTermsDefinitionsAbbreviations}
	'<TermsDefinitionsAbbreviations>'
		(terms+=VSRSTerm)*
		(definitions+=VSRSDefinition)*
		(abbreviations+=VSRSAbbreviation)*
	'</TermsDefinitionsAbbreviations>';

VSRSSoftwareOverview returns VSRSSoftwareOverview:
	'<SoftwareOverview>'
		'<FunctionPurpose>' functionPurpose=VSRSFixedSection '</FunctionPurpose>'
		'<EnvironmentalConsiderations>' environmentalConsiderations=VSRSFixedSection '</EnvironmentalConsiderations>' 
		'<RelationOtherSystems>' relationOtherSystems=VSRSFixedSection '</RelationOtherSystems>'
		'<Constraints>' constraints=VSRSFixedSection '</Constraints>'
	'</SoftwareOverview>';

VSRSRequirements returns VSRSRequirements:
	'<Requirements>'
		(sectionDescription=DBody)?
		general=VSRSGeneralRequirements
		functional=VSRSFunctionalRequirements
		performance=VSRSPerformanceRequirements
		interface=VSRSInterfaceRequirements
		operational=VSRSOperationalRequirements
		resources=VSRSResourcesRequirements
		design=VSRSDesignRequirements
		securityPrivacy=VSRSSecurityPrivacyRequirements
		portability=VSRSPortabilityRequirements
		swQuality=VSRSSWQualityRequirements
		swReliabilty=VSRSSWReliabiltyRequirements
		swMaintainability=VSRSSWMaintainabilityRequirements
		swSafety=VSRSSWSafetyRequirements
		swConfigurationDelivery=VSRSSWConfigurationDeliveryRequirements
		dataDefinitionDB=VSRSDataDefinitionDBRequirements
		humanFactors=VSRSHumanFactorsRequirements
		adaptationInstallation=VSRSAdaptationInstallationRequirements
	'</Requirements>';

VSRSLogicalModels returns VSRSLogicalModels:
	{VSRSLogicalModels}
	'<LogicalModels>'
		(logicalModels+=VSRSLogicalModel)*
	'</LogicalModels>';

VSRSTerm returns VSRSTerm:
	'<Term'
		'name=' name=STRING '>'
		description=DRun
	'</Term>';

VSRSDefinition returns VSRSDefinition:
	'<Definition'
		'name=' name=STRING '>'
		description=DRun
	'</Definition>';

VSRSAbbreviation returns VSRSAbbreviation:
	'<Abbreviation'
		'name=' name=STRING '>'
		description=DRun
	'</Abbreviation>';

VSRSInstantiableRequirementSection returns VSRSInstantiableRequirementSection:
	'<subsection'
		'name=' name=STRING
		'>'
		(sectionDescription=DBody)?
		(srsItems+=VSRSDocumentItem)*
	'</subsection>';

VSRSGeneralRequirements returns VSRSGeneralRequirements:
	{VSRSGeneralRequirements}
	'<GeneralRequirements>'
		(sectionDescription=DBody)?
		(srsItems+=VSRSDocumentItem)*
		(srsRequirementSubsections+=VSRSInstantiableRequirementSection)*
	'</GeneralRequirements>';


VSRSFunctionalRequirements returns VSRSFunctionalRequirements:
	{VSRSFunctionalRequirements}
	'<FunctionalRequirements>'
		(sectionDescription=DBody)?
		(srsItems+=VSRSDocumentItem)*
		(srsRequirementSubsections+=VSRSInstantiableRequirementSection)*
	'</FunctionalRequirements>';

VSRSPerformanceRequirements returns VSRSPerformanceRequirements:
	{VSRSPerformanceRequirements}
	'<PerformanceRequirements>'
		(sectionDescription=DBody)?
		(srsItems+=VSRSDocumentItem)*
		(srsRequirementSubsections+=VSRSInstantiableRequirementSection)*
	'</PerformanceRequirements>';

VSRSInterfaceRequirements returns VSRSInterfaceRequirements:
	{VSRSInterfaceRequirements}
	'<InterfaceRequirements>'
		(sectionDescription=DBody)?
		(srsItems+=VSRSDocumentItem)*
		(srsRequirementSubsections+=VSRSInstantiableRequirementSection)*
	'</InterfaceRequirements>';

VSRSOperationalRequirements returns VSRSOperationalRequirements:
	{VSRSOperationalRequirements}
	'<OperationalRequirements>'
		(sectionDescription=DBody)?
		(srsItems+=VSRSDocumentItem)*
		(srsRequirementSubsections+=VSRSInstantiableRequirementSection)*
	'</OperationalRequirements>';

VSRSResourcesRequirements returns VSRSResourcesRequirements:
	{VSRSResourcesRequirements}
	'<ResourcesRequirements>'
		(sectionDescription=DBody)?
		(srsItems+=VSRSDocumentItem)*
		(srsRequirementSubsections+=VSRSInstantiableRequirementSection)*
	'</ResourcesRequirements>';

VSRSDesignRequirements returns VSRSDesignRequirements:
	{VSRSDesignRequirements}
	'<DesignRequirements>'
		(sectionDescription=DBody)?
		(srsItems+=VSRSDocumentItem)*
		(srsRequirementSubsections+=VSRSInstantiableRequirementSection)*
	'</DesignRequirements>';

VSRSSecurityPrivacyRequirements returns VSRSSecurityPrivacyRequirements:
	{VSRSSecurityPrivacyRequirements}
	'<SecurityPrivacyRequirements>'
		(sectionDescription=DBody)?
		(srsItems+=VSRSDocumentItem)*
		(srsRequirementSubsections+=VSRSInstantiableRequirementSection)*
	'</SecurityPrivacyRequirements>';

VSRSPortabilityRequirements returns VSRSPortabilityRequirements:
	{VSRSPortabilityRequirements}
	'<PortabilityRequirements>'
		(sectionDescription=DBody)?
		(srsItems+=VSRSDocumentItem)*
		(srsRequirementSubsections+=VSRSInstantiableRequirementSection)*
	'</PortabilityRequirements>';

VSRSSWQualityRequirements returns VSRSSWQualityRequirements:
	{VSRSSWQualityRequirements}
	'<SWQualityRequirements>'
		(sectionDescription=DBody)?
		(srsItems+=VSRSDocumentItem)*
		(srsRequirementSubsections+=VSRSInstantiableRequirementSection)*
	'</SWQualityRequirements>';

VSRSSWReliabiltyRequirements returns VSRSSWReliabiltyRequirements:
	{VSRSSWReliabiltyRequirements}
	'<SWReliabiltyRequirements>'
		(sectionDescription=DBody)?
		(srsItems+=VSRSDocumentItem)*
		(srsRequirementSubsections+=VSRSInstantiableRequirementSection)*
	'</SWReliabiltyRequirements>';

VSRSSWMaintainabilityRequirements returns VSRSSWMaintainabilityRequirements:
	{VSRSSWMaintainabilityRequirements}
	'<SWMaintainabilityRequirements>'
		(sectionDescription=DBody)?
		(srsItems+=VSRSDocumentItem)*
		(srsRequirementSubsections+=VSRSInstantiableRequirementSection)*
	'</SWMaintainabilityRequirements>';

VSRSSWSafetyRequirements returns VSRSSWSafetyRequirements:
	{VSRSSWSafetyRequirements}
	'<SWSafetyRequirements>'
		(sectionDescription=DBody)?
		(srsItems+=VSRSDocumentItem)*
		(srsRequirementSubsections+=VSRSInstantiableRequirementSection)*
	'</SWSafetyRequirements>';

VSRSSWConfigurationDeliveryRequirements returns VSRSSWConfigurationDeliveryRequirements:
	{VSRSSWConfigurationDeliveryRequirements}
	'<SWConfigurationDeliveryRequirements>'
		(sectionDescription=DBody)?
		(srsItems+=VSRSDocumentItem)*
		(srsRequirementSubsections+=VSRSInstantiableRequirementSection)*
	'</SWConfigurationDeliveryRequirements>';

VSRSDataDefinitionDBRequirements returns VSRSDataDefinitionDBRequirements:
	{VSRSDataDefinitionDBRequirements}
	'<DataDefinitionDBRequirements>'
		(sectionDescription=DBody)?
		(srsItems+=VSRSDocumentItem)*
		(srsRequirementSubsections+=VSRSInstantiableRequirementSection)*
	'</DataDefinitionDBRequirements>';

VSRSHumanFactorsRequirements returns VSRSHumanFactorsRequirements:
	{VSRSHumanFactorsRequirements}
	'<HumanFactorsRequirements>'
		(sectionDescription=DBody)?
		(srsItems+=VSRSDocumentItem)*
		(srsRequirementSubsections+=VSRSInstantiableRequirementSection)*
	'</HumanFactorsRequirements>';

VSRSAdaptationInstallationRequirements returns VSRSAdaptationInstallationRequirements:
	{VSRSAdaptationInstallationRequirements}
	'<AdaptationInstallationRequirements>'
		(sectionDescription=DBody)?
		(srsItems+=VSRSDocumentItem)*
		(srsRequirementSubsections+=VSRSInstantiableRequirementSection)*
	'</AdaptationInstallationRequirements>';

VSRSDocumentItem returns VSRSDocumentItem:
	'<Item'
		'name=' name=STRING
		'validationMethod=' validationMethod=VValidationMethod
		'>'
			'<description>'
				description=DBody
			'</description>'
			('<parentItem' 'name=' parentItem+=[tdm::VTraceableDocumentAbstractItem|STRING] '/>')*
			('<extendedDescription>'
				extendedDescription=DBody
			'</extendedDescription>')?
	'</Item>';
	

enum VValidationMethod returns tdm::VValidationMethod:
	Analysis = '"Analysis"' | Inspection = '"Inspection"' | Testing = '"Testing"' |
	Review = '"Review"' | ModelSimulation = '"ModelSimulation"' | WalkThrough = '"WalkThrough"' |
	CrossReading = '"CrossReading"' | DeskChecking = '"DeskChecking"';

VSRSLogicalModel returns VSRSLogicalModel:
	{VSRSLogicalModel}
	'<LogicalModel/>';
