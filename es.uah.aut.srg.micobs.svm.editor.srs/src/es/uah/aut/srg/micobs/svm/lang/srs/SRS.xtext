// automatically generated by Xtext
grammar es.uah.aut.srg.micobs.svm.lang.srs.SRS with org.eclipse.xtext.common.Terminals

import "http://srg.aut.uah.es/micobs/svm/srs" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://srg.aut.uah.es/micobs/svm/tdm" as tdm
import "http://srg.aut.uah.es/micobs/doctpl/doctpl" as doctpl

VSRSDocument returns VSRSDocument:
	'<SRS'
		'name=' name=STRING
		'id=' id=STRING
		'issue=' issue=UINT_STRING
		'revision=' revision=UINT_STRING
		'date=' date=STRING
		'>'
		(parents+=VTraceableParentDocument)*
		introductionSection=VSRSIntroduction
		applicableDocumentsSection=VSRSApplicableDocuments
		referenceDocumentsSection=VSRSReferenceDocuments
		termsDefinitionsAbbreviationsSection=VSRSTermsDefinitionsAbbreviations
		softwareOverviewSection=VSRSSoftwareOverview
		requirementsSection=VSRSRequirements
		logicalModelsSection=VSRSLogicalModels
	'</SRS>';

VTraceableParentDocument returns tdm::VTraceableParentDocument: 
	'<parent' 'document=' document=[tdm::VTraceableDocument|STRING] '>'
	('<notApplicableItem' 'item=' notApplicableItem+=[tdm::VTraceableDocumentAbstractItem|STRING] '/>')*
	'</parent>';


DBody returns doctpl::DBody:
	'<body>'
		(bodyContent+=DBodyContent)+
	'</body>';

DBodyContent returns doctpl::DBodyContent:
	DParagraph | DItemize | DEnumerate | DFigureFromFile | DTableFromFile | DBasicTable;
		
enum DAlignment returns doctpl::DAlignment:
	left = '"left"' | center = '"center"' | right = '"right"' | justified = '"justified"';
	
DParagraph returns doctpl::DParagraph:
	'<paragraph'
		('alignment=' alignment=DAlignment)?
		('style=' style=STRING)?
		'>'
		(paragraphContent+=DParagraphContent)+ 
	'</paragraph>';

DListItem returns doctpl::DListItem:
	'<listItem>'
		(paragraph+=DParagraph)+ 
		('<sublist>' sublist=DListContent '</sublist>')?
	'</listItem>';

DListContent returns doctpl::DListContent:
	DItemize | DEnumerate;

DItemize returns doctpl::DItemize:
	'<itemize'
		('alignment=' alignment=DAlignment)?
		('style=' style=STRING)?
		'>'
		(items+=DListItem)+ 
	'</itemize>';

DEnumerate returns doctpl::DEnumerate:
	'<enumerate'
		('alignment=' alignment=DAlignment)?
		('style=' style=STRING)?
		'>'
		(items+=DListItem)+ 
	'</enumerate>';

DParagraphContent returns doctpl::DParagraphContent:
	DRun | DHyperlink;

enum DRunAttributes returns doctpl::DRunAttributes:
	TRUE = '"true"' | FALSE = '"false"';

DRun returns doctpl::DRun:
	'<run'
		('bold=' bold=DRunAttributes)?
		('italics=' italics=DRunAttributes)?
		('underline=' underline=DRunAttributes)?
		('color=' color=STRING)?
	'>'
		(tab=DTab)?
		text=DText
	'</run>';

DHyperlink returns doctpl::DHyperlink:
	'<hyperlink'
		'reference=' reference=[doctpl::DReferenceableObject|STRING]
	'>'
		(run=DRun)?
	'</hyperlink>';
	
DText returns doctpl::DText:
	content=RUNTEXT;
	
DTab returns doctpl::DTab:
{doctpl::DTab}
    '<tab/>';

terminal RUNTEXT returns ecore::EString:
    '<text>' -> '</text>';

DFigureFromFile returns doctpl::DFigureFromFile:
	'<figureFromFile'
		'name=' name=STRING
		'referenceFile=' referenceFile=STRING
		'width=' width=UINT_STRING
		'height=' height=UINT_STRING
		('alignment=' alignment=DAlignment)?
		('style=' style=STRING)?
		('caption=' caption=STRING)?
	'/>';

DTableFromFile returns doctpl::DTableFromFile:
	'<tableFromFile'
		'name=' name=STRING
		'referenceFile=' referenceFile=STRING
		'width=' width=UINT_STRING
		'height=' height=UINT_STRING
		('alignment=' alignment=DAlignment)?
		('style=' style=STRING)?
		('caption=' caption=STRING)?
	'/>';

DBasicTable returns doctpl::DBasicTable: 
	'<basicTable'
		'name=' name=STRING
		('width=' width=UINT_STRING)?
		('alignment=' alignment=DAlignment)?
		('style=' style=STRING)?
		('caption=' caption=STRING)?
	'>'
		(rows+=DRow)+
	'</basicTable>';

DRow returns doctpl::DRow:
	'<row>'
		(cells+=DCell)+
	'</row>';

DCell returns doctpl::DCell:
	'<cell'
		('colSpan=' colSpan=UINT_STRING)?
		('rowSpan=' rowSpan=UINT_STRING)?
		('width=' width=UINT_STRING)?
		('shadow=' shadow=STRING)?
	'>'
		(bodyContent+=DBodyContent)+
	'</cell>';
	
DApplicableDocument returns doctpl::DApplicableDocument:
	'<ApplicableDocument'
		'name=' name=STRING
		'title=' title=STRING
		'id=' id=STRING
		('issue=' issue=UINT_STRING
		('revision=' revision=UINT_STRING)?)?
		('date=' date=STRING)?
	'/>';

DReferenceDocument returns doctpl::DReferenceDocument:
	'<ReferenceDocument'
		'name=' name=STRING
		'title=' title=STRING
		'id=' id=STRING
		('issue=' issue=UINT_STRING
		('revision=' revision=UINT_STRING)?)?
		('date=' date=STRING)?
	'/>';

VSRSFixedSection returns VSRSFixedSection:
{VSRSFixedSection}
	(body=DBody)?
	(srsInstatiableSubsections+=VSRSInstantiableSection)*;

VSRSInstantiableSection returns VSRSInstantiableSection:
	'<subsection'
		'name=' name=STRING
		'>'
		(body=DBody)?
		(srsInstatiableSubsections+=VSRSInstantiableSection)*
	'</subsection>';
	
VSRSIntroduction returns VSRSIntroduction:
	'<Introduction>'
		(srsInstatiableSubsections+=VSRSInstantiableSection)+
	'</Introduction>';

VSRSApplicableDocuments returns VSRSApplicableDocuments:
	{VSRSApplicableDocuments}
	'<ApplicableDocuments>'
		(applicableDocuments+=DApplicableDocument)*
	'</ApplicableDocuments>';

VSRSReferenceDocuments returns VSRSReferenceDocuments:
	{VSRSReferenceDocuments}
	'<ReferenceDocuments>'
		(referenceDocuments+=DReferenceDocument)*
	'</ReferenceDocuments>';

VSRSTermsDefinitionsAbbreviations returns VSRSTermsDefinitionsAbbreviations:
	{VSRSTermsDefinitionsAbbreviations}
	'<TermsDefinitionsAbbreviations>'
		(terms+=VSRSTerm)*
		(definitions+=VSRSDefinition)*
		(abbreviations+=VSRSAbbreviation)*
	'</TermsDefinitionsAbbreviations>';

VSRSSoftwareOverview returns VSRSSoftwareOverview:
	'<SoftwareOverview>'
		'<FunctionPurpose>' functionPurpose=VSRSFixedSection '</FunctionPurpose>'
		'<EnvironmentalConsiderations>' environmentalConsiderations=VSRSFixedSection '</EnvironmentalConsiderations>' 
		'<RelationOtherSystems>' relationOtherSystems=VSRSFixedSection '</RelationOtherSystems>'
		'<Constraints>' constraints=VSRSFixedSection '</Constraints>'
	'</SoftwareOverview>';

VSRSRequirements returns VSRSRequirements:
	'<Requirements>'
		(sectionDescription=DBody)?
		general=VSRSGeneralRequirements
		functional=VSRSFunctionalRequirements
		performance=VSRSPerformanceRequirements
		interface=VSRSInterfaceRequirements
		operational=VSRSOperationalRequirements
		resources=VSRSResourcesRequirements
		design=VSRSDesignRequirements
		securityPrivacy=VSRSSecurityPrivacyRequirements
		portability=VSRSPortabilityRequirements
		swQuality=VSRSSWQualityRequirements
		swReliability=VSRSSWReliabilityRequirements
		swMaintainability=VSRSSWMaintainabilityRequirements
		swSafety=VSRSSWSafetyRequirements
		swConfigurationDelivery=VSRSSWConfigurationDeliveryRequirements
		dataDefinitionDB=VSRSDataDefinitionDBRequirements
		humanFactors=VSRSHumanFactorsRequirements
		adaptationInstallation=VSRSAdaptationInstallationRequirements
	'</Requirements>';

VSRSLogicalModels returns VSRSLogicalModels:
	{VSRSLogicalModels}
	'<LogicalModels>'
		(logicalModels+=VSRSLogicalModel)*
	'</LogicalModels>';

VSRSTerm returns VSRSTerm:
	'<Term'
		'name=' name=STRING '>'
		description=DRun
	'</Term>';

VSRSDefinition returns VSRSDefinition:
	'<Definition'
		'name=' name=STRING '>'
		description=DRun
	'</Definition>';

VSRSAbbreviation returns VSRSAbbreviation:
	'<Abbreviation'
		'name=' name=STRING '>'
		description=DRun
	'</Abbreviation>';

VSRSInstantiableRequirementSection returns VSRSInstantiableRequirementSection:
	'<subsection'
		'name=' name=STRING
		'>'
		(sectionDescription=DBody)?
		(srsItems+=VSRSDocumentItem)*
	'</subsection>';

VSRSGeneralRequirements returns VSRSGeneralRequirements:
	{VSRSGeneralRequirements}
	'<GeneralRequirements>'
		(sectionDescription=DBody)?
		(srsItems+=VSRSDocumentItem)*
		(srsRequirementSubsections+=VSRSInstantiableRequirementSection)*
	'</GeneralRequirements>';

VSRSFunctionalRequirements returns VSRSFunctionalRequirements:
	{VSRSFunctionalRequirements}
	'<FunctionalRequirements>'
		(sectionDescription=DBody)?
		(srsItems+=VSRSDocumentItem)*
		(srsRequirementSubsections+=VSRSInstantiableRequirementSection)*
	'</FunctionalRequirements>';

VSRSPerformanceRequirements returns VSRSPerformanceRequirements:
	{VSRSPerformanceRequirements}
	'<PerformanceRequirements>'
		(sectionDescription=DBody)?
		(srsItems+=VSRSDocumentItem)*
		(srsRequirementSubsections+=VSRSInstantiableRequirementSection)*
	'</PerformanceRequirements>';

VSRSInterfaceRequirements returns VSRSInterfaceRequirements:
	{VSRSInterfaceRequirements}
	'<InterfaceRequirements>'
		(sectionDescription=DBody)?
		(srsItems+=VSRSDocumentItem)*
		(srsRequirementSubsections+=VSRSInstantiableRequirementSection)*
	'</InterfaceRequirements>';

VSRSOperationalRequirements returns VSRSOperationalRequirements:
	{VSRSOperationalRequirements}
	'<OperationalRequirements>'
		(sectionDescription=DBody)?
		(srsItems+=VSRSDocumentItem)*
		(srsRequirementSubsections+=VSRSInstantiableRequirementSection)*
	'</OperationalRequirements>';

VSRSResourcesRequirements returns VSRSResourcesRequirements:
	{VSRSResourcesRequirements}
	'<ResourcesRequirements>'
		(sectionDescription=DBody)?
		(srsItems+=VSRSDocumentItem)*
		(srsRequirementSubsections+=VSRSInstantiableRequirementSection)*
	'</ResourcesRequirements>';

VSRSDesignRequirements returns VSRSDesignRequirements:
	{VSRSDesignRequirements}
	'<DesignRequirements>'
		(sectionDescription=DBody)?
		(srsItems+=VSRSDocumentItem)*
		(srsRequirementSubsections+=VSRSInstantiableRequirementSection)*
	'</DesignRequirements>';

VSRSSecurityPrivacyRequirements returns VSRSSecurityPrivacyRequirements:
	{VSRSSecurityPrivacyRequirements}
	'<SecurityPrivacyRequirements>'
		(sectionDescription=DBody)?
		(srsItems+=VSRSDocumentItem)*
		(srsRequirementSubsections+=VSRSInstantiableRequirementSection)*
	'</SecurityPrivacyRequirements>';

VSRSPortabilityRequirements returns VSRSPortabilityRequirements:
	{VSRSPortabilityRequirements}
	'<PortabilityRequirements>'
		(sectionDescription=DBody)?
		(srsItems+=VSRSDocumentItem)*
		(srsRequirementSubsections+=VSRSInstantiableRequirementSection)*
	'</PortabilityRequirements>';

VSRSSWQualityRequirements returns VSRSSWQualityRequirements:
	{VSRSSWQualityRequirements}
	'<SWQualityRequirements>'
		(sectionDescription=DBody)?
		(srsItems+=VSRSDocumentItem)*
		(srsRequirementSubsections+=VSRSInstantiableRequirementSection)*
	'</SWQualityRequirements>';

VSRSSWReliabilityRequirements returns VSRSSWReliabilityRequirements:
	{VSRSSWReliabilityRequirements}
	'<SWReliabilityRequirements>'
		(sectionDescription=DBody)?
		(srsItems+=VSRSDocumentItem)*
		(srsRequirementSubsections+=VSRSInstantiableRequirementSection)*
	'</SWReliabilityRequirements>';

VSRSSWMaintainabilityRequirements returns VSRSSWMaintainabilityRequirements:
	{VSRSSWMaintainabilityRequirements}
	'<SWMaintainabilityRequirements>'
		(sectionDescription=DBody)?
		(srsItems+=VSRSDocumentItem)*
		(srsRequirementSubsections+=VSRSInstantiableRequirementSection)*
	'</SWMaintainabilityRequirements>';

VSRSSWSafetyRequirements returns VSRSSWSafetyRequirements:
	{VSRSSWSafetyRequirements}
	'<SWSafetyRequirements>'
		(sectionDescription=DBody)?
		(srsItems+=VSRSDocumentItem)*
		(srsRequirementSubsections+=VSRSInstantiableRequirementSection)*
	'</SWSafetyRequirements>';

VSRSSWConfigurationDeliveryRequirements returns VSRSSWConfigurationDeliveryRequirements:
	{VSRSSWConfigurationDeliveryRequirements}
	'<SWConfigurationDeliveryRequirements>'
		(sectionDescription=DBody)?
		(srsItems+=VSRSDocumentItem)*
		(srsRequirementSubsections+=VSRSInstantiableRequirementSection)*
	'</SWConfigurationDeliveryRequirements>';

VSRSDataDefinitionDBRequirements returns VSRSDataDefinitionDBRequirements:
	{VSRSDataDefinitionDBRequirements}
	'<DataDefinitionDBRequirements>'
		(sectionDescription=DBody)?
		(srsItems+=VSRSDocumentItem)*
		(srsRequirementSubsections+=VSRSInstantiableRequirementSection)*
	'</DataDefinitionDBRequirements>';

VSRSHumanFactorsRequirements returns VSRSHumanFactorsRequirements:
	{VSRSHumanFactorsRequirements}
	'<HumanFactorsRequirements>'
		(sectionDescription=DBody)?
		(srsItems+=VSRSDocumentItem)*
		(srsRequirementSubsections+=VSRSInstantiableRequirementSection)*
	'</HumanFactorsRequirements>';

VSRSAdaptationInstallationRequirements returns VSRSAdaptationInstallationRequirements:
	{VSRSAdaptationInstallationRequirements}
	'<AdaptationInstallationRequirements>'
		(sectionDescription=DBody)?
		(srsItems+=VSRSDocumentItem)*
		(srsRequirementSubsections+=VSRSInstantiableRequirementSection)*
	'</AdaptationInstallationRequirements>';

VSRSDocumentItem returns VSRSDocumentItem:
	'<Item'
		'name=' name=STRING
		'validationMethod=' validationMethod=VValidationMethod
		'>'
			('<mode' 'name=' mode+=VSRSDocumentItemModes '/>')*
			'<description>'
				description=DBody
			'</description>'
			('<extendedDescription>'
				extendedDescription=DBody
			'</extendedDescription>')?
			('<parentItem' 'name=' parentItem+=[tdm::VTraceableDocumentAbstractItem|STRING] '/>')*
	'</Item>';

enum VValidationMethod returns tdm::VValidationMethod:
	Analysis = '"Analysis"' | Inspection = '"Inspection"' | Testing = '"Testing"' |
	Review = '"Review"' | ModelSimulation = '"ModelSimulation"' | WalkThrough = '"WalkThrough"' |
	CrossReading = '"CrossReading"' | DeskChecking = '"DeskChecking"';
	
enum VSRSDocumentItemModes returns VSRSDocumentItemModes:
	Off = '"Off"' | Boot = '"Boot"' | Safe = '"Safe"' |
	Configuration = '"Configuration"' | Operational = '"Operational"';

VSRSLogicalModel returns VSRSLogicalModel:
	{VSRSLogicalModel}
	'<LogicalModel/>';
	
terminal UINT_STRING returns ecore::EString:
	('"' ('0'..'9')+ '"');
